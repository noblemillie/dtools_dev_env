{
  "name": "dataset.tools",
  "productName": "dataset.tools",
  "version": "0.0.1",
  "description": "electron app to manage data.world datasets",
  "main": "dist/main/index.js",
  "scripts": {
    "test": "cross-env NODE_ENV=test mocha --compilers js:babel-register --recursive --require ./test/setup.js test/**/*.spec.js",
    "test-watch": "npm test -- --watch",
    "test-e2e": "cross-env NODE_ENV=test mocha --compilers js:babel-register --require ./test/setup.js --require co-mocha ./test/e2e.js",
    "lint": "eslint app test *.js",
    "hot-server": "node -r babel-register server.js",
    "build-main": "cross-env NODE_ENV=production node -r babel-register ./node_modules/webpack/bin/webpack --config webpack.config.electron.js --progress --profile --colors && cp app/package.json dist/",
    "build-renderer": "cross-env NODE_ENV=production node -r babel-register ./node_modules/webpack/bin/webpack --config webpack.config.production.js --progress --profile --colors && cp -R app/renderer/assets dist/renderer",
    "build": "npm run build-main && npm run build-renderer",
    "start": "cross-env NODE_ENV=production electron ./",
    "start-hot": "cross-env HOT=1 NODE_ENV=development electron -r babel-register -r babel-polyfill ./app/main/index",
    "dev": "concurrently --kill-others \"npm run hot-server\" \"npm run start-hot\"",
    "webfont:roboto": "webfont-dl \"https://fonts.googleapis.com/css?family=Roboto:regular,bold,italic,thin,light,bolditalic,black,medium&amp;lang=en\" -o app/renderer/assets/css/fonts/roboto.global.css --woff1=data --svg=omit --ttf=omit --eot=omit",
    "webfont:material-icons": "webfont-dl \"https://fonts.googleapis.com/icon?family=Material+Icons\" -o app/renderer/assets/css/fonts/material-icons.global.css --woff1=data --svg=omit --ttf=omit --eot=omit",
    "postinstall": "cd app/ && npm install",
    "pack": "npm run build && ./node_modules/.bin/build",
    "dist": "npm run build && ./node_modules/.bin/build",
    "release": "npm run build && ./node_modules/.bin/build"
  },
  "bin": {
    "electron": "./node_modules/.bin/electron"
  },
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/noblemillie/dtools_dev_env.git"
  },
  "author": "Phi Data Kappa",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/noblemillie/dtools_dev_env/issues"
  },
  "keywords": [
    "redux",
    "electron"
  ],
  "homepage": "https://github.com/noblemillie/dtools_dev_env",
  "dependencies": {
    "asar": "^0.12.2",
    "babel-cli": "^6.26.0",
    "babel-core": "^6.14.0",
    "babel-eslint": "^6.0.2",
    "babel-loader": "^6.2.5",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-webpack-loaders": "^0.7.1",
    "babel-polyfill": "^6.7.4",
    "babel-preset-es2015": "^6.14.0",
    "babel-preset-react": "^6.5.0",
    "babel-preset-react-hmre": "^1.1.1",
    "babel-preset-stage-0": "^6.5.0",
    "babel-register": "^6.14.0",
    "chai": "^3.5.0",
    "chromedriver": "^2.23.1",
    "concurrently": "^2.0.0",
    "cross-env": "^2.0.0",
    "css-loader": "^0.24.0",
    "del": "^2.2.2",
    "electron-rebuild": "^1.1.3",
    "eslint": "^3.3.1",
    "eslint-config-airbnb": "^10.0.1",
    "eslint-plugin-import": "^1.14.0",
    "eslint-plugin-jsx-a11y": "^2.1.0",
    "eslint-plugin-react": "^6.1.2",
    "express": "^4.13.4",
    "extract-text-webpack-plugin": "^1.0.1",
    "fbjs-scripts": "^0.7.1",
    "jsdom": "^9.4.2",
    "json-loader": "^0.5.4",
    "minimist": "^1.2.0",
    "mocha": "^3.0.2",
    "node-libs-browser": "^1.0.0",
    "react-addons-test-utils": "^15.3.1",
    "selenium-webdriver": "^2.53.1",
    "sinon": "^1.17.3",
    "source-map-support": "^0.4.0",
    "style-loader": "^0.13.1",
    "webfont-dl": "^0.1.2",
    "webpack": "^1.13.2",
    "webpack-dev-middleware": "^1.6.1",
    "webpack-hot-middleware": "^2.10.0"
  },
  "devDependencies": {
    "electron-builder": "^5.30.0",
    "electron-prebuilt": "^1.3.4"
  },
  "devEngines": {
    "node": "4.x || 5.x || 6.x",
    "npm": "2.x || 3.x"
  },
  "contributors": [
    "Noble Millie (https://github.com/noblemillie)"
  ],
  "directories": {
    "app": "./dist/",
    "output": "./release/"
  }
}
